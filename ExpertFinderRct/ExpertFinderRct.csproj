<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <Nullable>enable</Nullable>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
<!--        <SpaRoot>clientapp\</SpaRoot>-->
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
<!--        <SpaProxyServerUrl>https://localhost:44419</SpaProxyServerUrl>-->
        <SpaProxyServerUrl>https://localhost:6363</SpaProxyServerUrl>
<!--        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>-->
        <SpaProxyLaunchCommand>npm run dev</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Bogus" Version="34.0.2" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.0-preview.6.23329.11">
            <!-- The SPA Proxy is only used at development time -->
            <Publish>false</Publish>
        </PackageReference>
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="8.0.0-preview.6.23329.11" />
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.0-preview.6.23329.4" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.0-preview.6.23329.4">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.0-preview.6.23329.4">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="8.0.0-preview.4" />
        <PackageReference Include="System.Text.Json" Version="8.0.0-preview.6.23329.7" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <None Remove="Services\InstitutionServices\" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="ClientApp\src\assets\client\" />
      <Folder Include="ClientApp\src\users\clients\" />
      <Folder Include="ClientApp\src\users\experts\" />
      <Folder Include="Services\InstitutionServices\" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

<!--    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">-->
<!--        &lt;!&ndash; As part of publishing, ensure the JS resources are freshly built in production mode &ndash;&gt;-->
<!--        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
<!--        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />-->

<!--        &lt;!&ndash; Include the newly-built files in the publish output &ndash;&gt;-->
<!--        <ItemGroup>-->
<!--            <DistFiles Include="$(SpaRoot)build\**" />-->
<!--            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">-->
<!--                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>-->
<!--                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>-->
<!--                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>-->
<!--            </ResolvedFileToPublish>-->
<!--        </ItemGroup>-->
<!--    </Target>-->

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**" />  <!-- Changed to dist! -->
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath> <!-- Changed! -->
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
